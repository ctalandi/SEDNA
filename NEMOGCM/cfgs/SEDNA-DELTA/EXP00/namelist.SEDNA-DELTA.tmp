!!>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>
!! NEMO/OCE :   Reference namelist_ref                                !!
!!>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>
!! NEMO/OCE  :  1 - Domain & run manager (namrun, namcfg, namdom, namtsd, namcrs, namc1d, namc1d_uvd)
!! namelists    2 - Surface boundary (namsbc, namsbc_flx, namsbc_blk, namsbc_cpl,
!!                                    namsbc_sas, namtra_qsr, namsbc_rnf,
!!                                    namsbc_isf, namsbc_iscpl, namsbc_apr, 
!!                                    namsbc_ssr, namsbc_wave, namberg)
!!              3 - lateral boundary (namlbc, namagrif, nambdy, nambdy_tide)
!!              4 - top/bot boundary (namdrg, namdrg_top, namdrg_bot, nambbc, nambbl)
!!              5 - Tracer           (nameos, namtra_adv, namtra_ldf, namtra_eiv, namtra_dmp)
!!              6 - dynamics         (namdyn_adv, namdyn_vor, namdyn_hpg, namdyn_spg, namdyn_ldf)
!!              7 - Vertical physics (namzdf, namzdf_ric, namzdf_tke, namzdf_gls, namzdf_iwm)
!!              8 - diagnostics      (namnc4, namtrd, namspr, namflo, namhsb)
!!              9 - Obs & Assim      (namobs, nam_asminc)
!!             10 - miscellaneous    (nammpp, namctl, namsto)
!!>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>

!!======================================================================
!!              ***  Domain & Run management namelists  ***           !!
!!                                                                    !!
!!   namrun       parameters of the run
!!   namdom       space and time domain
!!   namcfg       parameters of the configuration                       (default: user defined GYRE)
!!   namwad       Wetting and drying                                    (default: OFF)
!!   namtsd       data: temperature & salinity                          (default: OFF)
!!   namcrs       coarsened grid (for outputs and/or TOP)               (ln_crs =T)
!!   namc1d       1D configuration options                              ("key_c1d")
!!   namc1d_dyndmp 1D newtonian damping applied on currents             ("key_c1d")
!!   namc1d_uvd   1D data (currents)                                    ("key_c1d")
!!======================================================================
!
!-----------------------------------------------------------------------
&namrun        !   parameters of the run
!-----------------------------------------------------------------------
   nn_no         =   <NN_NO>         !  job number
   cn_exp        =   SEDNA-DELTA     !  experience name 
   nn_it000      =    <NIT000>       !  first time step
   nn_itend      =    <NITEND>       !  last  time step
   nn_date0      =  20090101         !  initial calendar date yymmdd (used if nrstdt=1)
   nn_time0    =       0             !  initial time of day in hhmm
   nn_leapy    =       0             !  Leap year calendar (1) or not (0)
   ln_rstart   = <RESTART>           !  start from rest (F) or from a restart file (T)
      nn_euler    =       1   !  = 0 : start with forward time step if ln_rstart=T
      nn_rstctl   =       2   !  restart control => activated only if ln_rstart = T
                              !    = 0 nn_date0 read in namelist ; nn_it000 : read in namelist
                              !    = 1 nn_date0 read in namelist ; nn_it000 : check consistancy between namelist and restart
                              !    = 2 nn_date0 read in restart  ; nn_it000 : check consistancy between namelist and restart
      cn_ocerst_in  = "<OCERST_IN>" !  suffix of ocean restart name (input)
      cn_ocerst_indir = "<CN_IN_OCERST>"       !  directory from which to read input ocean restarts
      cn_ocerst_out = "<OCERST_OUT>" !  suffix of ocean restart name (output)
      cn_ocerst_outdir = "<CN_OUT_OCERST>"      !  directory in which to write output ocean restarts
   ln_iscpl    = .false.   !  cavity evolution forcing or coupling to ice sheet model
   nn_istate   =       0   !  output the initial state (1) or not (0)
   ln_rst_list = .false.   !  output restarts at list of times using nn_stocklist (T) or at set frequency with nn_stock (F)
   nn_stock    =       0   !  used only if ln_rst_list = F: output restart freqeuncy (modulo referenced to 1)
      !                          !    =  0 force to write restart files only at the end of the run
      !                          !    = -1 do not do any restart
   nn_stocklist = NITRST1,NITRST2,0,0,0,0,0,0,0,0 ! List of timesteps when a restart file is to be written
   nn_write    =       0   !  used only if key_iomput is not defined: output frequency (modulo referenced to nn_it000)
      !                          !    =  0 force to write output files only at the end of the run
      !                          !    = -1 do not do any output file
   ln_mskland  = .false.   !  mask land points in NetCDF outputs
   ln_cfmeta   = .false.   !  output additional data to netCDF files required for compliance with the CF metadata standard
   ln_clobber  = .true.    !  clobber (overwrite) an existing file
   nn_chunksz  =       0   !  chunksize (bytes) for NetCDF file (works only with iom_nf90 routines)
   ln_xios_read = .FALSE.  !  use XIOS to read restart file (only for a single file restart)
   nn_wxios = 0      !  use XIOS to write restart file 0 - no, 1 - single file output, 2 - multiple file output
/
!-----------------------------------------------------------------------
&namdom        !   time and space domain
!-----------------------------------------------------------------------
   ln_linssh   = .true.    !  =T  linear free surface  ==>>  model level are fixed in time
   rn_isfhmin  =    1.00   !  treshold [m] to discriminate grounding ice from floating ice
   !
   rn_rdt      =    40.    !  time step for the dynamics and tracer
   rn_atfp     =    0.1    !  asselin time filter parameter
   !
   ln_crs      = .false.   !  Logical switch for coarsening module      (T => fill namcrs)
   !
   ln_meshmask = .false.    !  =T create a mesh file
/
!-----------------------------------------------------------------------
&namcfg        !   parameters of the configuration                      (default: use namusr_def in namelist_cfg)
!-----------------------------------------------------------------------
   ln_read_cfg = .true.    !  (=T) read the domain configuration file
      !                    !  (=F) user defined configuration           (F => create/check namusr_def)
      cn_domcfg = "SEDNA_Domain_cfg_Tgt_20210820_tsh10m_L1"  ! domain configuration filename
      !
      ln_closea    = .false.    !  T => keep closed seas (defined by closea_mask field) in the  
      !                         !       domain and apply special treatment of freshwater fluxes.
      !                         !  F => suppress closed seas (defined by closea_mask field) 
      !                         !       from the bathymetry at runtime.
      !                         !  If closea_mask field doesn't exist in the domain_cfg file
      !                         !       then this logical does nothing.
   ln_write_cfg = .false.   !  (=T) create the domain configuration file
      cn_domcfg_out = "domain_cfg_out" ! newly created domain configuration filename
      !
   ln_use_jattr = .false.  !  use (T) the file attribute: open_ocean_jstart, if present
   !                       !  in netcdf input files, as the start j-row for reading
/
!-----------------------------------------------------------------------
&namtsd        !    Temperature & Salinity Data  (init/dmp)             (default: OFF)
!-----------------------------------------------------------------------
   !                       ! =T  read T-S fields for:
   ln_tsd_init = .true.         !  ocean initialisation
   ln_tsd_dmp  = .true.         !  T-S restoring   (see namtra_dmp)
   
   cn_dir      = './'      !  root directory for the T-S data location
   !___________!_________________________!___________________!___________!_____________!________!___________!__________________!__________!_______________!
   !           !  file name              ! frequency (hours) ! variable  ! time interp.!  clim  ! 'yearly'/ ! weights filename ! rotation ! land/sea mask !
   !           !                         !  (if <0  months)  !   name    !   (logical) !  (T/F) ! 'monthly' !                  ! pairing  !    filename   !
   sn_tem_ini = 'woa09_temperature_monthly_1deg_t_an_CMA_drowned' ,  -12      , 't_an',   .true.    , .true. , 'yearly'  ,    'reshape_WOA09_GLO1x1toSEDNA_bilin_20210824.nc'            ,    ''    ,    ''
   sn_sal_ini = 'woa09_salinity_monthly_1deg_s_an_CMA_drowned'    ,  -12      , 's_an',   .true.    , .true. , 'yearly'  ,    'reshape_WOA09_GLO1x1toSEDNA_bilin_20210824.nc'            ,    ''    ,    ''
   sn_tem_dmp = 'woa09_temperature_monthly_1deg_t_an_CMA_drowned' ,  -12      , 't_an',   .true.    , .true. , 'yearly'  ,    'reshape_WOA09_GLO1x1toSEDNA_bilin_20210824.nc'            ,    ''    ,    ''
   sn_sal_dmp = 'woa09_salinity_monthly_1deg_s_an_CMA_drowned'    ,  -12      , 's_an',   .true.    , .true. , 'yearly'  ,    'reshape_WOA09_GLO1x1toSEDNA_bilin_20210824.nc'            ,    ''    ,    ''
/
!!======================================================================
!!            ***  Surface Boundary Condition namelists  ***          !!
!!                                                                    !!
!!   namsbc          surface boundary condition manager                 (default: NO selection)
!!   namsbc_flx      flux               formulation                     (ln_flx     =T)
!!   namsbc_blk      Bulk formulae formulation                          (ln_blk     =T)
!!   namsbc_cpl      CouPLed            formulation                     ("key_oasis3" )
!!   namsbc_sas      Stand-Alone Surface module                         (SAS_SRC  only)
!!   namsbc_iif      Ice-IF: use observed ice cover                     (nn_ice = 1   )
!!   namtra_qsr      penetrative solar radiation                        (ln_traqsr  =T)
!!   namsbc_ssr      sea surface restoring term (for T and/or S)        (ln_ssr     =T)
!!   namsbc_rnf      river runoffs                                      (ln_rnf     =T)
!!   namsbc_apr      Atmospheric Pressure                               (ln_apr_dyn =T)
!!   namsbc_isf      ice shelf melting/freezing                         (ln_isfcav  =T : read (ln_read_cfg=T) or set or usr_def_zgr )
!!   namsbc_iscpl    coupling option between land ice model and ocean   (ln_isfcav  =T)
!!   namsbc_wave     external fields from wave model                    (ln_wave    =T)
!!   namberg         iceberg floats                                     (ln_icebergs=T)
!!======================================================================
!
!-----------------------------------------------------------------------
&namsbc        !   Surface Boundary Condition manager                   (default: NO selection)
!-----------------------------------------------------------------------
   nn_fsbc     = 1         !  frequency of SBC module call
      !                    !  (control sea-ice & iceberg model call)
                     ! Type of air-sea fluxes 
   ln_usr      = .false.   !  user defined formulation                  (T => check usrdef_sbc)
   ln_flx      = .false.   !  flux formulation                          (T => fill namsbc_flx )
   ln_blk      = .true.    !  Bulk formulation                          (T => fill namsbc_blk )
      !              ! Type of coupling (Ocean/Ice/Atmosphere) :
   ln_cpl      = .false.   !  atmosphere coupled   formulation          ( requires key_oasis3 )
   ln_mixcpl   = .false.   !  forced-coupled mixed formulation          ( requires key_oasis3 )
   nn_components = 0       !  configuration of the opa-sas OASIS coupling
      !                    !  =0 no opa-sas OASIS coupling: default single executable config.
      !                    !  =1 opa-sas OASIS coupling: multi executable config., OPA component
      !                    !  =2 opa-sas OASIS coupling: multi executable config., SAS component 
                     ! Sea-ice :
   nn_ice      = 2         !  =0 no ice boundary condition    
      !                    !  =1 use observed ice-cover                 (  => fill namsbc_iif )
      !                    !  =2 or 3 automatically for SI3 or CICE    ("key_si3" or "key_cice")
      !                    !          except in AGRIF zoom where it has to be specified
   ln_ice_embd = .false.   !  =T embedded sea-ice (pressure + mass and salt exchanges)
      !                    !  =F levitating ice (no pressure, mass and salt exchanges)
                     ! Misc. options of sbc : 
   ln_traqsr   = .true.    !  Light penetration in the ocean            (T => fill namtra_qsr)
   ln_dm2dc    = .false.   !  daily mean to diurnal cycle on short wave
   ln_ssr      = .true.    !  Sea Surface Restoring on T and/or S       (T => fill namsbc_ssr)
   nn_fwb      = 0         !  FreshWater Budget: =0 unchecked
      !                    !     =1 global mean of e-p-r set to zero at each time step
      !                    !     =2 annual global mean of e-p-r set to zero
   ln_rnf      = .true.    !  runoffs                                   (T => fill namsbc_rnf)
   ln_apr_dyn  = .false.   !  Patm gradient added in ocean & ice Eqs.   (T => fill namsbc_apr )
   ln_isf      = .false.   !  ice shelf                                 (T   => fill namsbc_isf & namsbc_iscpl)
   ln_wave     = .false.   !  Activate coupling with wave  (T => fill namsbc_wave)
   ln_cdgw     = .false.   !  Neutral drag coefficient read from wave model (T => ln_wave=.true. & fill namsbc_wave)
   ln_sdw      = .false.   !  Read 2D Surf Stokes Drift & Computation of 3D stokes drift (T => ln_wave=.true. & fill namsbc_wave) 
   nn_sdrift   =  0        !  Parameterization for the calculation of 3D-Stokes drift from the surface Stokes drift
      !                    !   = 0 Breivik 2015 parameterization: v_z=v_0*[exp(2*k*z)/(1-8*k*z)]
      !                    !   = 1 Phillips:                      v_z=v_o*[exp(2*k*z)-beta*sqrt(-2*k*pi*z)*erfc(sqrt(-2*k*z))]
      !                    !   = 2 Phillips as (1) but using the wave frequency from a wave model
   ln_tauwoc   = .false.   !  Activate ocean stress modified by external wave induced stress (T => ln_wave=.true. & fill namsbc_wave)
   ln_tauw     = .false.   !  Activate ocean stress components from wave model
   ln_stcor    = .false.   !  Activate Stokes Coriolis term (T => ln_wave=.true. & ln_sdw=.true. & fill namsbc_wave)
   nn_lsm      = 0         !  =0 land/sea mask for input fields is not applied (keep empty land/sea mask filename field) ,
                           !  =1:n number of iterations of land/sea mask application for input fields (fill land/sea mask filename field)
/
!-----------------------------------------------------------------------
&namsbc_blk    !   namsbc_blk  generic Bulk formula                     (ln_blk =T)
!-----------------------------------------------------------------------
   !                    !  bulk algorithm :
   ln_NCAR      = .true.    ! "NCAR"      algorithm   (Large and Yeager 2008)
   ln_COARE_3p0 = .false.   ! "COARE 3.0" algorithm   (Fairall et al. 2003)
   ln_COARE_3p5 = .false.   ! "COARE 3.5" algorithm   (Edson et al. 2013)
   ln_ECMWF     = .false.   ! "ECMWF"     algorithm   (IFS cycle 31)
      !
      rn_zqt      =  2.       !  Air temperature & humidity reference height (m)
      rn_zu       = 10.       !  Wind vector reference height (m)
      ln_Cd_L12   = .false.   !  air-ice drags = F(ice concentration) (Lupkes et al. 2012)
      ln_Cd_L15   = .true.    !  air-ice drags = F(ice concentration) (Lupkes et al. 2015)
      ln_taudif   = .false.   !  HF tau contribution: use "mean of stress module - module of the mean stress" data
      rn_pfac     = 1.        !  multiplicative factor for precipitation (total & snow)
      rn_efac     = 1.        !  multiplicative factor for evaporation (0. or 1.)
      rn_vfac     = 0.        !  multiplicative factor for ocean & ice velocity used to
      !                       !  calculate the wind stress (0.=absolute or 1.=relative winds)

   cn_dir      = './'      !  root directory for the bulk data location
   !___________!_________________________!___________________!___________!_____________!________!___________!______________________________________!__________!_______________!
   !           !  file name              ! frequency (hours) ! variable  ! time interp.!  clim  ! 'yearly'/ !       weights filename               ! rotation ! land/sea mask !
   !           !                         !  (if <0  months)  !   name    !   (logical) !  (T/F) ! 'monthly' !                                      ! pairing  !    filename   !
   sn_wndi     = 'ERA5_u10_drwnd'        ,         1         , 'u10'     ,   .false.   , .false., 'yearly'  , 'reshape_ERA5_SEDNA_Tgt_bicub_20210823.nc' , 'Uwnd'   , ''
   sn_wndj     = 'ERA5_v10_drwnd'        ,         1         , 'v10'     ,   .false.   , .false., 'yearly'  , 'reshape_ERA5_SEDNA_Tgt_bicub_20210823.nc' , 'Vwnd'   , ''
   sn_qsr      = 'ERA5_msdwswrf_drwnd'   ,         1         , 'msdwswrf',   .false.   , .false., 'yearly'  , 'reshape_ERA5_SEDNA_Tgt_bilin_20210823.nc' , ''       , ''
   sn_qlw      = 'ERA5_msdwlwrf_drwnd'   ,         1         , 'msdwlwrf',   .false.   , .false., 'yearly'  , 'reshape_ERA5_SEDNA_Tgt_bilin_20210823.nc' , ''       , ''
   sn_tair     = 'ERA5_t2m_drwnd'        ,         1         , 't2m'     ,   .false.   , .false., 'yearly'  , 'reshape_ERA5_SEDNA_Tgt_bilin_20210823.nc' , ''       , ''
   sn_humi     = 'ERA5_q2m_drwnd'        ,         1         , 'q2m'     ,   .false.   , .false., 'yearly'  , 'reshape_ERA5_SEDNA_Tgt_bilin_20210823.nc' , ''       , ''
   sn_prec     = 'ERA5_mtpr_drwnd'       ,         1         , 'mtpr'    ,   .false.   , .false., 'yearly'  , 'reshape_ERA5_SEDNA_Tgt_bilin_20210823.nc' , ''       , ''
   sn_snow     = 'ERA5_msr_drwnd'        ,         1         , 'msr'     ,   .false.   , .false., 'yearly'  , 'reshape_ERA5_SEDNA_Tgt_bilin_20210823.nc' , ''       , ''
   sn_slp      = 'ERA5_msl_drwnd'        ,         1         , 'msl'     ,   .false.   , .false., 'yearly'  , 'reshape_ERA5_SEDNA_Tgt_bilin_20210823.nc' , ''       , ''
   sn_tdif     = ''                      ,        -1         , ''        ,   .false.   , .false., 'yearly'  , '' , ''       , ''
/
!-----------------------------------------------------------------------
&namtra_qsr    !   penetrative solar radiation                          (ln_traqsr =T)
!-----------------------------------------------------------------------
   !                       !  type of penetration                        (default: NO selection)
   ln_qsr_rgb  = .false.   !  RGB light penetration (Red-Green-Blue)
   ln_qsr_2bd  = .true.    !  2BD light penetration (two bands)
   ln_qsr_bio  = .false.   !  bio-model light penetration
   !                       !  RGB & 2BD choices:
   rn_abs      =   0.58       !  RGB & 2BD: fraction absorbed in the very near surface
   rn_si0      =   0.35       !  RGB & 2BD: shortess depth of extinction
   nn_chldta   =      0       !  RGB : Chl data (=1) or cst value (=0)
   rn_si1      =   23.0       !  2BD : longest depth of extinction
   
   cn_dir      = './'      !  root directory for the chlorophyl data location
   !___________!_________________________!___________________!___________!_____________!________!___________!__________!__________!_______________!
   !           !  file name              ! frequency (hours) ! variable  ! time interp.!  clim  ! 'yearly'/ ! weights  ! rotation ! land/sea mask !
   !           !                         !  (if <0  months)  !   name    !   (logical) !  (T/F) ! 'monthly' ! filename ! pairing  !    filename   !
   sn_chl      = ''                      ,         -1        , 'CHLA'    ,   .true.    , .true. , 'yearly'  , ''       , ''       , ''
/
!-----------------------------------------------------------------------
&namsbc_ssr    !   surface boundary condition : sea surface restoring   (ln_ssr =T)
!-----------------------------------------------------------------------
   nn_sstr     =     0     !  add a retroaction term to the surface heat flux (=1) or not (=0)
      rn_dqdt     = -40.      !  magnitude of the retroaction on temperature   [W/m2/K]
   nn_sssr     =     2     !  add a damping term to the surface freshwater flux (=2)
      !                    !  or to SSS only (=1) or no damping term (=0)
      rn_deds     =  -166.67  !  magnitude of the damping on salinity   [mm/day]
      ln_sssr_bnd =  .true.   !  flag to bound erp term (associated with nn_sssr=2)
      rn_sssr_bnd =   4.e0    !  ABS(Max/Min) value of the damping erp term [mm/day]
      nn_sssr_ice =   0       ! control of sea surface restoring under sea-ice
                              ! 0 = no restoration under ice : * (1-icefrac)
                              ! 1 = restoration everywhere
                              ! >1 = enhanced restoration under ice : 1+(nn_icedmp-1)*icefrac
   cn_dir      = './'      !  root directory for the SST/SSS data location
   !___________!_________________________!___________________!___________!_____________!________!___________!__________________!__________!_______________!
   !           !  file name              ! frequency (hours) ! variable  ! time interp.!  clim  ! 'yearly'/ ! weights filename ! rotation ! land/sea mask !
   !           !                         !  (if <0  months)  !   name    !   (logical) !  (T/F) ! 'monthly' !                  ! pairing  !    filename   !
   sn_sst      = 'woa09_sst01-12_monthly_1deg_t_an_CMA_drowned' ,        -12   ,  't_an'    ,    .true.    , .true. , 'yearly'  , 'SST_reshape_WOA09_GLO1x1toSEDNA_bilin_20210824.nc'    , ''       , '' 
   sn_sss      = 'woa09_sss01-12_monthly_1deg_s_an_CMA_drowned' ,        -12   ,  's_an'    ,    .true.    , .true. , 'yearly'  , 'SSS_reshape_WOA09_GLO1x1toSEDNA_bilin_20210824.nc'    , ''       , ''
   sn_coast    = 'SEDNA_dist.coast_20210823_tsh10m_L1'                   ,         0    , 'Tcoast'   ,    .false.   , .true. , 'yearly'  , ''                                                , ''       , ''
   ln_sssr_flt = .true.    ! use filtering of SSS model for sss restoring
   nn_shap_iter   =  50    ! number of iteration of the shapiro filter
   ln_sssr_msk = .true.   ! use a mask near the coast
   rn_dist    =  150.      ! distance to the coast
   ln_sssr_ice = .false.   ! Apply SSS restoring under sea-ice CAUTION, it overrights the nn_sssr_ice parameter
/
!-----------------------------------------------------------------------
&namsbc_rnf    !   runoffs                                              (ln_rnf =T)
!-----------------------------------------------------------------------
   ln_rnf_mouth  = .true.     !  specific treatment at rivers mouths
      rn_hrnf    =  50.e0     !  depth over which enhanced vertical mixing is used    (ln_rnf_mouth=T)
      rn_avt_rnf =   1.e-3    !  value of the additional vertical mixing coef. [m2/s] (ln_rnf_mouth=T)
   rn_rfact      =   1.e0     !  multiplicative factor for runoff
   ln_rnf_depth  = .false.    !  read in depth information for runoff
   ln_rnf_tem    = .false.    !  read in temperature information for runoff
   ln_rnf_sal    = .false.    !  read in salinity information for runoff
   ln_rnf_depth_ini = .false. ! compute depth at initialisation from runoff file
      rn_rnf_max  = 5.735e-4  !  max value of the runoff climatologie over global domain ( ln_rnf_depth_ini = .true )
      rn_dep_max  = 150.      !  depth over which runoffs is spread ( ln_rnf_depth_ini = .true )
      nn_rnf_depth_file = 0   !  create (=1) a runoff depth file or not (=0)
   ln_rnf_icb  = .false.   !  read in iceberg flux from a file (fill sn_i_rnf if .true.)

   cn_dir      = './'      !  root directory for the runoff data location
   !___________!____________________!___________________!___________!_____________!________!___________!__________________!__________!_______________!
   !           !  file name         ! frequency (hours) ! variable  ! time interp.!  clim  ! 'yearly'/ ! weights filename ! rotation ! land/sea mask !
   !           !                    !  (if <0  months)  !   name    !   (logical) !  (T/F) ! 'monthly' !                  ! pairing  !    filename   !

   sn_rnf      = 'SEDNA_runoff_monthly_combined_Dai_Trenberth_Bamber_Z' , -1      , 'runoff'  , .true.      , .false. , 'yearly'  , ''       , '' , ''
   sn_cnf      = 'SEDNA_runoff_monthly_combined_Dai_Trenberth_Bamber_Z' ,  1      , 'socoefr' , .false.     , .false. , 'yearly'  , ''       , '' , ''
   sn_s_rnf    = ' '            ,        24        , 'rosaline',   .true.     , .true. , 'yearly'  , ''       , '' , ''
   sn_t_rnf    = ' '            ,        24        , 'rotemper',   .true.     , .true. , 'yearly'  , ''       , '' , ''
   sn_dep_rnf  = ' '            ,         0        , 'rodepth' ,   .false.    , .true. , 'yearly'  , ''       , '' , ''
/

!!======================================================================
!!               ***  Lateral boundary condition  ***                 !!
!!                                                                    !!
!!   namlbc        lateral momentum boundary condition                  (default: NO selection)
!!   namagrif      agrif nested grid   (read by child model only)       ("key_agrif")
!!   nam_tide      Tidal forcing                                        (default: OFF)
!!   nambdy        Unstructured open boundaries                         (default: OFF)
!!   nambdy_dta    Unstructured open boundaries - external data         (see  nambdy)
!!   nambdy_tide   tidal forcing at open boundaries                     (default: OFF)
!!======================================================================
!
!-----------------------------------------------------------------------
&namlbc        !   lateral momentum boundary condition                  (default: NO selection)
!-----------------------------------------------------------------------
   !                       !  free slip  !   partial slip  !   no slip   ! strong slip
   rn_shlat    =    2.     !  shlat = 0  !  0 < shlat < 2  !  shlat = 2  !  2 < shlat
   ln_vorlat   = .false.   !  consistency of vorticity boundary condition with analytical Eqs.
/
!-----------------------------------------------------------------------
&namagrif      !  AGRIF zoom                                            ("key_agrif")
!-----------------------------------------------------------------------
   ln_spc_dyn    = .true.  !  use 0 as special value for dynamics
   rn_sponge_tra = 2880.   !  coefficient for tracer   sponge layer [m2/s]
   rn_sponge_dyn = 2880.   !  coefficient for dynamics sponge layer [m2/s]
   ln_chk_bathy  = .false. !  =T  check the parent bathymetry
/
!-----------------------------------------------------------------------
&nam_tide      !   tide parameters                                      (default: OFF)
!-----------------------------------------------------------------------
   ln_tide     = .false.      ! Activate tides
      ln_tide_pot   = .false.                !  use tidal potential forcing
         ln_scal_load  = .false.               ! Use scalar approximation for
            rn_scal_load = 0.094               !     load potential
         ln_read_load  = .false.               ! Or read load potential from file
            cn_tide_load = 'tide_LOAD_grid_T.nc'  ! filename for load potential
            !      
      ln_tide_ramp  = .false.               !  Use linear ramp for tides at startup
         rdttideramp   =    0.                 !  ramp duration in days
      clname(1)     = 'DUMMY'               !  name of constituent - all tidal components must be set in namelist_cfg
/
!-----------------------------------------------------------------------
&nambdy        !  unstructured open boundaries                          (default: OFF)
!-----------------------------------------------------------------------
   ln_bdy         = .true.    !  Use unstructured open boundaries
   nb_bdy         = 3         !  number of open boundary sets
   ln_coords_file = .false.,.false.,.false.   !  =T : read bdy coordinates from file
      cn_coords_file = '',''          !  bdy coordinates files
   ln_mask_file   = .false.   !  =T : read mask from file
      cn_mask_file = ''        !  name of mask file (if ln_mask_file=.TRUE.)
   cn_dyn2d    = 'flather','flather','flather' 
   nn_dyn2d_dta   = 1,1,1     !  = 0, bdy data are equal to the initial state
      !                       !  = 1, bdy data are read in 'bdydata   .nc' files
      !                       !  = 2, use tidal harmonic forcing data from files
      !                       !  = 3, use external data AND tidal harmonic forcing
   cn_dyn3d      =  'frs','frs','frs' !
   nn_dyn3d_dta  =  1,1,1     !  = 0, bdy data are equal to the initial state
   !                          !  = 1, bdy data are read in 'bdydata   .nc' files
   cn_tra        =  'frs','frs','frs' !
   nn_tra_dta    =  1,1,1     !  = 0, bdy data are equal to the initial state
   !                          !  = 1, bdy data are read in 'bdydata   .nc' files
   cn_ice        =  'none','frs','none' !
   nn_ice_dta    =  0,1,0     !  = 0, bdy data are equal to the initial state
   !                          !  = 1, bdy data are read in 'bdydata   .nc' files
   !
   ln_tra_dmp    =.false.,.false.,.false.     !  open boudaries conditions for tracers
   ln_dyn3d_dmp  =.false.,.false.,.false.     !  open boundary condition for baroclinic velocities
   rn_time_dmp   =  1.,1.,1.  !  Damping time scale in days
   rn_time_dmp_out = 10.,10.,10.  !  Outflow damping time scale
   nn_rimwidth   = 10,10,10   !  width of the relaxation zone
   ln_vol        = .false.     !  total volume correction (see nn_volctl parameter)
   nn_volctl     =  0         !  = 0, the total water flux across open boundaries is zero
/
!-----------------------------------------------------------------------
&nambdy_index  !  clem creg025: tructured open boundaries definition
!-----------------------------------------------------------------------
    ctypebdy ='S'                   ! Open boundary type (W,E,S or N)
    nbdyind  = 2                    ! indice of velocity row or column
                                    ! if ==-1, set obc at the domain boundary
                                    !        , discard start and end indices
    nbdybeg  = 1530                 ! indice of segment start
    nbdyend  = 5299                 ! indice of segment end
/
!-----------------------------------------------------------------------
&nambdy_index  !  structured open boundaries definition
!-----------------------------------------------------------------------
    ctypebdy ='N'                   ! Open boundary type (W,E,S or N)
    nbdyind  = 6538                 ! indice of velocity row or column
                                    ! if ==-1, set obc at the domain boundary
                                    !        , discard start and end indices
    nbdybeg  = 2421                 ! indice of segment start
    nbdyend  = 2566                 ! indice of segment end
/
!-----------------------------------------------------------------------
&nambdy_index  !  structured open boundaries definition
!-----------------------------------------------------------------------
    ctypebdy ='S'                   ! Open boundary type (W,E,S or N)
    nbdyind  = 361                  ! indice of velocity row or column
                                    ! if ==-1, set obc at the domain boundary
                                    !        , discard start and end indices
    nbdybeg  = 5341                 ! indice of segment start
    nbdyend  = 5410                 ! indice of segment end
/
!-----------------------------------------------------------------------
&nambdy_dta    !  open boundaries - external data                       (see nam_bdy)
!-----------------------------------------------------------------------
   ln_zinterp  = .false.      !  T if a vertical interpolation is required. Variables gdep[tuv] and e3[tuv] must exist in the file
   !                          !  automatically defined to T if the number of vertical levels in bdy dta /= jpk
   ln_full_vel = .true.       !  T if [uv]3d are "full" velocities and not only its baroclinic components
   !                          !  in this case, baroclinic and barotropic velocities will be recomputed -> [uv]2d not needed
   !
   cn_dir      = './'         !  root directory for the BDY data location
   !___________!_________________________!___________________!___________!_____________!________!___________!__________________!__________!_______________!
   !           !  file name              ! frequency (hours) ! variable  ! time interp.!  clim  ! 'yearly'/ ! weights filename ! rotation ! land/sea mask !
   !           !                         !  (if <0  months)  !   name    !   (logical) !  (T/F) ! 'monthly' !                  ! pairing  !    filename   !
   bn_ssh =    'GLORYS12V1-SEDNA_ATLSPG.1d_grid2D' ,  24.   , 'sossheig' ,   .true.    , .false. ,  'yearly'  ,    ''    ,   ''     ,     ''
   bn_u3d  =   'GLORYS12V1-SEDNA_ATLSPG.1d_gridU'  ,  24.   , 'vozocrtx' ,   .true.    , .false. ,  'yearly'  ,    ''    ,   ''     ,     ''
   bn_v3d  =   'GLORYS12V1-SEDNA_ATLSPG.1d_gridV'  ,  24.   , 'vomecrty' ,   .true.    , .false. ,  'yearly'  ,    ''    ,   ''     ,     ''
   bn_tem  =   'GLORYS12V1-SEDNA_ATLSPG.1d_gridT'  ,  24.   , 'votemper' ,   .true.    , .false. ,  'yearly'  ,    ''    ,   ''     ,     ''
   bn_sal  =   'GLORYS12V1-SEDNA_ATLSPG.1d_gridS'  ,  24.   , 'vosaline' ,   .true.    , .false. ,  'yearly'  ,    ''    ,   ''     ,     ''
/
!-----------------------------------------------------------------------
&nambdy_dta    !  open boundaries - external data                       (see nam_bdy)
!-----------------------------------------------------------------------
   ln_zinterp  = .false.      !  T if a vertical interpolation is required. Variables gdep[tuv] and e3[tuv] must exist in the file
   !                          !  automatically defined to T if the number of vertical levels in bdy dta /= jpk
   ln_full_vel = .true.       !  T if [uv]3d are "full" velocities and not only its baroclinic components
   !                          !  in this case, baroclinic and barotropic velocities will be recomputed -> [uv]2d not needed
   !
   cn_dir      = './'         !  root directory for the BDY data location
   !___________!_________________________!___________________!___________!_____________!________!___________!__________________!__________!_______________!
   !           !  file name              ! frequency (hours) ! variable  ! time interp.!  clim  ! 'yearly'/ ! weights filename ! rotation ! land/sea mask !
   !           !                         !  (if <0  months)  !   name    !   (logical) !  (T/F) ! 'monthly' !                  ! pairing  !    filename   !
   bn_ssh  =   'GLORYS12V1-SEDNA_BERING.1d_grid2D'  ,  24.  , 'sossheig' ,    .true.   , .false. ,  'yearly'  ,    ''    ,   ''     ,     ''
   bn_u3d  =   'GLORYS12V1-SEDNA_BERING.1d_gridU'   ,  24.  , 'vozocrtx' ,    .true.   , .false. ,  'yearly'  ,    ''    ,   ''     ,     ''
   bn_v3d  =   'GLORYS12V1-SEDNA_BERING.1d_gridV_m01-12Modified'   ,  24.  , 'vomecrty' ,    .true.   , .false. ,  'yearly'  ,    ''    ,   ''     ,     ''
   bn_tem  =   'GLORYS12V1-SEDNA_BERING.1d_gridT'   ,  24.  , 'votemper' ,    .true.   , .false. ,  'yearly'  ,    ''    ,   ''     ,     ''
   bn_sal  =   'GLORYS12V1-SEDNA_BERING.1d_gridS'   ,  24.  , 'vosaline' ,    .true.   , .false. ,  'yearly'  ,    ''    ,   ''     ,     ''
!* for si3
   bn_a_i  =   'GLORYS12V1-SEDNA_BERING.1d_icemod'  ,  24.  , 'ileadfra' ,    .true.   , .false. ,  'yearly'  ,    ''    ,   ''     ,     ''
   bn_h_i  =   'GLORYS12V1-SEDNA_BERING.1d_icemod'  ,  24.  , 'iicethic' ,    .true.   , .false. ,  'yearly'  ,    ''    ,   ''     ,     ''
   bn_h_s  =   'GLORYS12V1-SEDNA_BERING.1d_icemod'  ,  24.  , 'isnowthi' ,    .true.   , .false. ,  'yearly'  ,    ''    ,   ''     ,     ''
   bn_t_i      = 'NOT USED'                         ,  24.  , 'sitemp'   ,    .true.   , .false. ,  'daily'   ,    ''    ,   ''     ,     ''
   bn_t_s      = 'NOT USED'                         ,  24.  , 'sntemp'   ,    .true.   , .false. ,  'daily'   ,    ''    ,   ''     ,     ''
   bn_tsu      = 'NOT USED'                         ,  24.  , 'sittop'   ,    .true.   , .false. ,  'daily'   ,    ''    ,   ''     ,     ''
   bn_s_i      = 'NOT USED'                         ,  24.  , 'sisalt'   ,    .true.   , .false. ,  'daily'   ,    ''    ,   ''     ,     ''
   ! melt ponds (be careful, bn_aip is the pond concentration (not fraction), so it differs from rn_iceapnd)
   bn_aip      = 'NOT USED'                         ,  24.  , 'siapnd'   ,    .true.   , .false. ,  'daily'   ,    ''    ,   ''     ,     ''
   bn_hip      = 'NOT USED'                         ,  24.  , 'sihpnd'   ,    .true.   , .false. ,  'daily'   ,    ''    ,   ''     ,     ''
   bn_hil      = 'NOT USED'                         ,  24.  , 'sihlid'   ,    .true.   , .false. ,  'daily'   ,    ''    ,   ''     ,     ''
   ! if bn_t_i etc are "not used", then d           efine arbitrary temperatures and salinity and ponds
   rn_ice_tem  = 270.         !  arbitrary temperature               of incoming sea ice
   rn_ice_sal  = 10.          !       --   salinity                            --
   rn_ice_age  = 30.          !       --   age                                 --
   rn_ice_apnd = 0.2          !       --   pond fraction = a_ip/a_i            --
   rn_ice_hpnd = 0.05         !       --   pond depth                          --
   rn_ice_hlid = 0.0          !       --   pond lid depth                      --
/
!-----------------------------------------------------------------------
&nambdy_dta    !  open boundaries - external data                       (see nam_bdy)
!-----------------------------------------------------------------------
   ln_zinterp  = .false.      !  T if a vertical interpolation is required. Variables gdep[tuv] and e3[tuv] must exist in the file
   !                          !  automatically defined to T if the number of vertical levels in bdy dta /= jpk
   ln_full_vel = .true.       !  T if [uv]3d are "full" velocities and not only its baroclinic components
   !                          !  in this case, baroclinic and barotropic velocities will be recomputed -> [uv]2d not needed
   !
   cn_dir      = './'         !  root directory for the BDY data location
   !___________!_________________________!___________________!___________!_____________!________!___________!__________________!__________!_______________!
   !           !  file name              ! frequency (hours) ! variable  ! time interp.!  clim  ! 'yearly'/ ! weights filename ! rotation ! land/sea mask !
   !           !                         !  (if <0  months)  !   name    !   (logical) !  (T/F) ! 'monthly' !                  ! pairing  !    filename   !
   bn_ssh =    'GLORYS12V1-SEDNA_BALTIC.1d_grid2D' ,  24.   , 'sossheig' ,   .true.    , .false. ,  'yearly'  ,    ''    ,   ''     ,     ''
   bn_u3d  =   'GLORYS12V1-SEDNA_BALTIC.1d_gridU'  ,  24.   , 'vozocrtx' ,   .true.    , .false. ,  'yearly'  ,    ''    ,   ''     ,     ''
   bn_v3d  =   'GLORYS12V1-SEDNA_BALTIC.1d_gridV'  ,  24.   , 'vomecrty' ,   .true.    , .false. ,  'yearly'  ,    ''    ,   ''     ,     ''
   bn_tem  =   'GLORYS12V1-SEDNA_BALTIC.1d_gridT'  ,  24.   , 'votemper' ,   .true.    , .false. ,  'yearly'  ,    ''    ,   ''     ,     ''
   bn_sal  =   'GLORYS12V1-SEDNA_BALTIC.1d_gridS'  ,  24.   , 'vosaline' ,   .true.    , .false. ,  'yearly'  ,    ''    ,   ''     ,     ''
/
!!======================================================================
!!                ***  Top/Bottom boundary condition  ***             !!
!!                                                                    !!
!!   namdrg        top/bottom drag coefficient                          (default: NO selection)
!!   namdrg_top    top    friction                                      (ln_drg_OFF=F & ln_isfcav=T)
!!   namdrg_bot    bottom friction                                      (ln_drg_OFF=F)
!!   nambbc        bottom temperature boundary condition                (default: OFF)
!!   nambbl        bottom boundary layer scheme                         (default: OFF)
!!======================================================================
!
!-----------------------------------------------------------------------
&namdrg        !   top/bottom drag coefficient                          (default: NO selection)
!-----------------------------------------------------------------------
   ln_drg_OFF  = .false.   !  free-slip       : Cd = 0                  (F => fill namdrg_bot
   ln_lin      = .false.   !      linear  drag: Cd = Cd0 Uc0                   &   namdrg_top)
   ln_non_lin  = .false.   !  non-linear  drag: Cd = Cd0 |U|
   ln_loglayer = .true.    !  logarithmic drag: Cd = vkarmn/log(z/z0) |U|
   !
   ln_drgimp   = .true.    !  implicit top/bottom friction flag
      ln_drgice_imp = .false. ! implicit ice-ocean drag
/
!-----------------------------------------------------------------------
&namdrg_top    !   TOP friction                                         (ln_drg_OFF =F & ln_isfcav=T)
!-----------------------------------------------------------------------
   rn_Cd0      =  1.e-3    !  drag coefficient [-]
   rn_Uc0      =  0.4      !  ref. velocity [m/s] (linear drag=Cd0*Uc0) 
   rn_Cdmax    =  0.1      !  drag value maximum [-] (logarithmic drag)
   rn_ke0      =  2.5e-3   !  background kinetic energy  [m2/s2] (non-linear cases)
   rn_z0       =  3.0e-3   !  roughness [m] (ln_loglayer=T)
   ln_boost    = .false.   !  =T regional boost of Cd0 ; =F constant
      rn_boost =  50.         !  local boost factor  [-]
/
!-----------------------------------------------------------------------
&namdrg_bot    !   BOTTOM friction                                      (ln_drg_OFF =F)
!-----------------------------------------------------------------------
   rn_Cd0      =  1.e-3    !  drag coefficient [-]
   rn_Uc0      =  0.4      !  ref. velocity [m/s] (linear drag=Cd0*Uc0) 
   rn_Cdmax    =  0.1      !  drag value maximum [-] (logarithmic drag)
   rn_ke0      =  2.5e-3   !  background kinetic energy  [m2/s2] (non-linear cases)
   rn_z0       =  3.e-3    !  roughness [m] (ln_loglayer=T)
   ln_boost    = .false.   !  =T regional boost of Cd0 ; =F constant
      rn_boost =  50.         !  local boost factor  [-]
/
!-----------------------------------------------------------------------
&nambbc        !   bottom temperature boundary condition                (default: OFF)
!-----------------------------------------------------------------------
   ln_trabbc   = .false.   !  Apply a geothermal heating at the ocean bottom
      nn_geoflx     = 2       !  geothermal heat flux: = 1 constant flux
      !                       !                        = 2 read variable flux [mW/m2]
      rn_geoflx_cst = 86.4e-3 !  Constant value of geothermal heat flux       [mW/m2]

   cn_dir      = './'      !  root directory for the geothermal data location
   !___________!_________________________!___________________!___________!_____________!________!___________!__________________!__________!_______________!
   !           !  file name              ! frequency (hours) ! variable  ! time interp.!  clim  ! 'yearly'/ ! weights filename ! rotation ! land/sea mask !
   !           !                         !  (if <0  months)  !   name    !   (logical) !  (T/F) ! 'monthly' !                  ! pairing  !    filename   !
   sn_qgh      ='geothermal_heating'     ,       -12.        , 'heatflow',   .false.   , .true. , 'yearly'  ,   ''             ,   ''     ,   ''
/
!-----------------------------------------------------------------------
&nambbl        !   bottom boundary layer scheme                         (default: OFF)
!-----------------------------------------------------------------------
   ln_trabbl   = .true.   !  Bottom Boundary Layer parameterisation flag
      nn_bbl_ldf  =  1        !  diffusive bbl (=1)   or not (=0)
      nn_bbl_adv  =  0        !  advective bbl (=1/2) or not (=0)
      rn_ahtbbl   =  1000.    !  lateral mixing coefficient in the bbl  [m2/s]
      rn_gambbl   =  10.      !  advective bbl coefficient                 [s]
/

!!======================================================================
!!                        Tracer (T-S) namelists                      !!
!!                                                                    !!
!!   nameos        equation of state                                    (default: NO selection)
!!   namtra_adv    advection scheme                                     (default: NO selection)
!!   namtra_ldf    lateral diffusion scheme                             (default: NO selection)
!!   namtra_mle    mixed layer eddy param. (Fox-Kemper param.)          (default: OFF)
!!   namtra_eiv    eddy induced velocity param.                         (default: OFF)
!!   namtra_dmp    T & S newtonian damping                              (default: OFF)
!!======================================================================
!
!-----------------------------------------------------------------------
&nameos        !   ocean Equation Of Seawater                           (default: NO selection)
!-----------------------------------------------------------------------
   ln_teos10   = .false.         !  = Use TEOS-10 equation of state
   ln_eos80    = .true.          !  = Use EOS80
   ln_seos     = .false.         !  = Use S-EOS (simplified Eq.)
                                 !
   !                     ! S-EOS coefficients (ln_seos=T):
   !                             !  rd(T,S,Z)*rau0 = -a0*(1+.5*lambda*dT+mu*Z+nu*dS)*dT+b0*dS
   rn_a0       =  1.6550e-1      !  thermal expension coefficient
   rn_b0       =  7.6554e-1      !  saline  expension coefficient
   rn_lambda1  =  5.9520e-2      !  cabbeling coeff in T^2  (=0 for linear eos)
   rn_lambda2  =  7.4914e-4      !  cabbeling coeff in S^2  (=0 for linear eos)
   rn_mu1      =  1.4970e-4      !  thermobaric coeff. in T (=0 for linear eos)
   rn_mu2      =  1.1090e-5      !  thermobaric coeff. in S (=0 for linear eos)
   rn_nu       =  2.4341e-3      !  cabbeling coeff in T*S  (=0 for linear eos)
/
!-----------------------------------------------------------------------
&namtra_adv    !   advection scheme for tracer                          (default: NO selection)
!-----------------------------------------------------------------------
   ln_traadv_OFF = .false. !  No tracer advection
   ln_traadv_cen = .false. !  2nd order centered scheme
      nn_cen_h   =  4            !  =2/4, horizontal 2nd order CEN / 4th order CEN
      nn_cen_v   =  4            !  =2/4, vertical   2nd order CEN / 4th order COMPACT
   ln_traadv_fct = .true.  !  FCT scheme
      nn_fct_h   =  4            !  =2/4, horizontal 2nd / 4th order
      nn_fct_v   =  2            !  =2/4, vertical   2nd / COMPACT 4th order
   ln_traadv_mus = .false. !  MUSCL scheme
      ln_mus_ups = .false.       !  use upstream scheme near river mouths
   ln_traadv_ubs = .false. !  UBS scheme
      nn_ubs_v   =  2            !  =2  , vertical 2nd order FCT / COMPACT 4th order
   ln_traadv_qck = .false. !  QUICKEST scheme
/
!-----------------------------------------------------------------------
&namtra_ldf    !   lateral diffusion scheme for tracers                 (default: NO selection)
!-----------------------------------------------------------------------
   !                       !  Operator type:
   ln_traldf_OFF   = .false.   !  No explicit diffusion
   ln_traldf_lap   = .true.    !    laplacian operator
   ln_traldf_blp   = .false.   !  bilaplacian operator
   !
   !                       !  Direction of action:
   ln_traldf_lev   = .false.   !  iso-level
   ln_traldf_hor   = .false.   !  horizontal  (geopotential)
   ln_traldf_iso   = .true.    !  iso-neutral (standard operator)
   ln_traldf_triad = .false.   !  iso-neutral (triad    operator)
   !
   !		       	         !  iso-neutral options:        
   ln_traldf_msc   = .true.    !  Method of Stabilizing Correction      (both operators)
   rn_slpmax       =  0.01     !  slope limit                           (both operators)
   ln_triad_iso    = .false.   !  pure horizontal mixing in ML              (triad only)
   rn_sw_triad     = 1         !  =1 switching triad ; =0 all 4 triads used (triad only)
   ln_botmix_triad = .false.   !  lateral mixing on bottom                  (triad only)
   !
   !                       !  Coefficients:
   nn_aht_ijk_t    = 20        !  space/time variation of eddy coefficient:
      !                             !   =-20 (=-30)    read in eddy_diffusivity_2D.nc (..._3D.nc) file
      !                             !   =  0           constant 
      !                             !   = 10 F(k)      =ldf_c1d 
      !                             !   = 20 F(i,j)    =ldf_c2d 
      !                             !   = 21 F(i,j,t)  =Treguier et al. JPO 1997 formulation
      !                             !   = 30 F(i,j,k)  =ldf_c2d * ldf_c1d
      !                             !   = 31 F(i,j,k,t)=F(local velocity and grid-spacing)
      !                        !  time invariant coefficients:  aht0 = 1/2  Ud*Ld   (lap case) 
      !                             !                           or   = 1/12 Ud*Ld^3 (blp case)
      rn_Ud        = 0.0344827586   !  lateral diffusive velocity [m/s] (nn_aht_ijk_t= 0, 10, 20, 30)
      rn_Ld        = 200.e+3        !  lateral diffusive length   [m]   (nn_aht_ijk_t= 0, 10)
!----------------------------------------------------------------------------
!  drakkar comment : for the case  nn_aht_ijk_t = 20 ( only rn_Ud is used )
!                                                              LAP             BILAP
!           aht[uv](:,:) = fac*Ud * max(e1,e2)(:,:) ^ n    [ fac=1/2, n=1 ; fac=1/12, n=3)
!  In 3.6   aht[uv](:,:) = rn_aht_0 * [ max(e1,e2)(:,:)/ max(e1,e2) ] ^ n
!     ===>  rn_Ud = rn_aht_0/fac/MAX(e1,e2)^n
!3.6 :  rn_aht_0         =  67.52   !  horizontal eddy diffusivity for tracers [m2/s] BSAS12 (ref 47.5 N)
!        rn_Ud = 67.52 * 2 / (7012)^1 = 0.0193  !! ( lap)
!   for a bilap this will give a max bilap of
!   aht_max = 1/12 * 0.0193 * ( 7012)^3 = 3.319 10^9 m4/s )
! comment ORCA05 : lap iso 600 m2/s : rn_Ud= 600*2/55600 = 0.02158
! comment ORCA025 : lap iso 300 m2/s : rn_Ud= 300*2/27800 = 0.02158
! comment CREG025 : lap iso 300 m2/s : rn_Ud= 300*2/27800 = 0.02158
! comment CREG12  : lap iso 100 m2/s : rn_Ud= 100*2/8357. = 0.02393
! comment ARC60   : lap iso 20 m2/s  : rn_Ud=  20*2/1160. = 0.034482758620689655
!----------------------------------------------------------------------------
/
!-----------------------------------------------------------------------
&namtra_mle    !   mixed layer eddy parametrisation (Fox-Kemper)       (default: OFF)
!-----------------------------------------------------------------------
   ln_mle      = .false.   ! (T) use the Mixed Layer Eddy (MLE) parameterisation
   rn_ce       = 0.06      ! magnitude of the MLE (typical value: 0.06 to 0.08)
   nn_mle      = 1         ! MLE type: =0 standard Fox-Kemper ; =1 new formulation
   rn_lf       = 5.e+3     ! typical scale of mixed layer front (meters)                      (case rn_mle=0)
   rn_time     = 172800.   ! time scale for mixing momentum across the mixed layer (seconds)  (case rn_mle=0)
   rn_lat      = 20.       ! reference latitude (degrees) of MLE coef.                        (case rn_mle=1)
   nn_mld_uv   = 0         ! space interpolation of MLD at u- & v-pts (0=min,1=averaged,2=max)
   nn_conv     = 0         ! =1 no MLE in case of convection ; =0 always MLE
   rn_rho_c_mle = 0.01      ! delta rho criterion used to calculate MLD for FK
/
!-----------------------------------------------------------------------
&namtra_eiv    !   eddy induced velocity param.                         (default: OFF)
!-----------------------------------------------------------------------
   ln_ldfeiv   = .false.   ! use eddy induced velocity parameterization
      !
      !                        !  Coefficients:
      nn_aei_ijk_t    = 0           !  space/time variation of eddy coefficient:
      !                             !   =-20 (=-30)    read in eddy_induced_velocity_2D.nc (..._3D.nc) file
      !                             !   =  0           constant 
      !                             !   = 10 F(k)      =ldf_c1d 
      !                             !   = 20 F(i,j)    =ldf_c2d 
      !                             !   = 21 F(i,j,t)  =Treguier et al. JPO 1997 formulation
      !                             !   = 30 F(i,j,k)  =ldf_c2d * ldf_c1d
      !                        !  time invariant coefficients:  aei0 = 1/2  Ue*Le 
      rn_Ue        = 0.02           !  lateral diffusive velocity [m/s] (nn_aht_ijk_t= 0, 10, 20, 30)
      rn_Le        = 200.e+3        !  lateral diffusive length   [m]   (nn_aht_ijk_t= 0, 10)
      !
      ln_ldfeiv_dia =.false.   ! diagnose eiv stream function and velocities
/
!-----------------------------------------------------------------------
&namtra_dmp    !   tracer: T & S newtonian damping                      (default: OFF)
!-----------------------------------------------------------------------
   ln_tradmp   =  .false.     !  add a damping term (using resto.nc coef.)
      nn_zdmp  =    0         !  vertical shape =0    damping throughout the water column
      !                       !                 =1 no damping in the mixing layer (kz  criteria)
      !                       !                 =2 no damping in the mixed  layer (rho crieria)
      cn_resto = 'resto.nc'   !  Name of file containing restoration coeff. field (use dmp_tools to create this)
   !
   nn_hdmp     =   -2      !  horizontal shape =-1, damping in Med and Red Seas only
                           !                   =XX, damping poleward of XX degrees (XX>0)
                           !                      + F(distance-to-coast) + Red and Med Seas
                           !                   =-2, DRAKKAR customization
   nn_file     =    1      !  create a damping.coeff NetCDF file (=1) or not (=0)
   ln_dmpmask  = .false.   !  Read dmp_mask.nc file  when T (between 0 and 1 )
   rn_timsk    =  730.     !  Time scale used for dmp_mask
/
!!======================================================================
!!                      ***  Dynamics namelists  ***                  !!
!!                                                                    !!
!!   nam_vvl       vertical coordinate options                          (default: z-star)
!!   namdyn_adv    formulation of the momentum advection                (default: NO selection)
!!   namdyn_vor    advection scheme                                     (default: NO selection)
!!   namdyn_hpg    hydrostatic pressure gradient                        (default: NO selection)
!!   namdyn_spg    surface pressure gradient                            (default: NO selection)
!!   namdyn_ldf    lateral diffusion scheme                             (default: NO selection)
!!   namdta_dyn    offline TOP: dynamics read in files                  (OFF_SRC only)
!!======================================================================
!
!-----------------------------------------------------------------------
&nam_vvl       !   vertical coordinate options                          (default: z-star)
!-----------------------------------------------------------------------
   ln_vvl_zstar  = .false.          !  z-star vertical coordinate
   ln_vvl_ztilde = .false.          !  z-tilde vertical coordinate: only high frequency variations
   ln_vvl_layer  = .false.          !  full layer vertical coordinate
   ln_vvl_ztilde_as_zstar = .false. !  ztilde vertical coordinate emulating zstar
   ln_vvl_zstar_at_eqtor  = .false. !  ztilde near the equator
   rn_ahe3       =  0.0             !  thickness diffusion coefficient
   rn_rst_e3t    = 30.0             !  ztilde to zstar restoration timescale [days]
   rn_lf_cutoff  =  5.0             !  cutoff frequency for low-pass filter  [days]
   rn_zdef_max   =  0.9             !  maximum fractional e3t deformation
   ln_vvl_dbg    = .true.           !  debug prints    (T/F)
/
!-----------------------------------------------------------------------
&namdyn_adv    !   formulation of the momentum advection                (default: NO selection)
!-----------------------------------------------------------------------
   ln_dynadv_OFF = .false. !  linear dynamics (no momentum advection)
   ln_dynadv_vec = .false.  !  vector form - 2nd centered scheme
     nn_dynkeg   = 1        ! grad(KE) scheme: =0   C2  ;  =1   Hollingsworth correction
   ln_dynadv_cen2 = .false. !  flux form - 2nd order centered scheme
   ln_dynadv_ubs = .true.  !  flux form - 3rd order UBS      scheme
/
!-----------------------------------------------------------------------
&namdyn_vor    !   Vorticity / Coriolis scheme                          (default: NO selection)
!-----------------------------------------------------------------------
   ln_dynvor_ene = .false. !  energy    conserving scheme
   ln_dynvor_ens = .false. !  enstrophy conserving scheme
   ln_dynvor_mix = .false. !  mixed scheme
   ln_dynvor_enT = .false. !  energy conserving scheme (T-point)
   ln_dynvor_eeT = .false. !  energy conserving scheme (een using e3t)
   ln_dynvor_een = .true.  !  energy & enstrophy scheme
      nn_een_e3f = 0          ! =0  e3f = mi(mj(e3t))/4
      !                       ! =1  e3f = mi(mj(e3t))/mi(mj( tmask))
   ln_dynvor_msk = .false. !  vorticity multiplied by fmask (=T)        ==>>> PLEASE DO NOT ACTIVATE
      !                    !  (f-point vorticity schemes only)
/
!-----------------------------------------------------------------------
&namdyn_hpg    !   Hydrostatic pressure gradient option                 (default: NO selection)
!-----------------------------------------------------------------------
   ln_hpg_zco  = .false.   !  z-coordinate - full steps
   ln_hpg_zps  = .true.    !  z-coordinate - partial steps (interpolation)
   ln_hpg_sco  = .false.   !  s-coordinate (standard jacobian formulation)
   ln_hpg_isf  = .false.   !  s-coordinate (sco ) adapted to isf
   ln_hpg_djc  = .false.   !  s-coordinate (Density Jacobian with Cubic polynomial)
   ln_hpg_prj  = .false.   !  s-coordinate (Pressure Jacobian scheme)
/
!-----------------------------------------------------------------------
&namdyn_spg    !   surface pressure gradient                            (default: NO selection)
!-----------------------------------------------------------------------
   ln_dynspg_exp  = .false.   ! explicit free surface
   ln_dynspg_ts   = .true.    ! split-explicit free surface
      ln_bt_fw      = .true.     ! Forward integration of barotropic Eqs.
      ln_bt_av      = .true.     ! Time filtering of barotropic variables
         nn_bt_flt     = 1          ! Time filter choice  = 0 None
         !                          !                     = 1 Boxcar over   nn_baro sub-steps
         !                          !                     = 2 Boxcar over 2*nn_baro  "    "
      ln_bt_auto    = .true.     ! Number of sub-step defined from:
         rn_bt_cmax   =  0.8        ! =T : the Maximum Courant Number allowed
         nn_baro      = 30          ! =F : the number of sub-step in rn_rdt seconds
      rn_bt_alpha   = 0.         ! Temporal diffusion parameter (if ln_bt_av=F)
/
!-----------------------------------------------------------------------
&namdyn_ldf    !   lateral diffusion on momentum                        (default: NO selection)
!-----------------------------------------------------------------------
   !                       !  Type of the operator :
   ln_dynldf_OFF = .false.     !  No operator (i.e. no explicit diffusion)
   ln_dynldf_lap = .false.     !    laplacian operator
   ln_dynldf_blp = .true.      !  bilaplacian operator
   !                       !  Direction of action  :
   ln_dynldf_lev = .false.     !  iso-level
   ln_dynldf_hor = .true.      !  horizontal  (geopotential)
   ln_dynldf_iso = .false.     !  iso-neutral (lap only)
   !                       !  Coefficient
   nn_ahm_ijk_t  = 20          !  space/time variation of eddy coefficient :
      !                             !  =-30  read in eddy_viscosity_3D.nc file
      !                             !  =-20  read in eddy_viscosity_2D.nc file
      !                             !  =  0  constant
      !                             !  = 10  F(k)=c1d
      !                             !  = 20  F(i,j)=F(grid spacing)=c2d
      !                             !  = 30  F(i,j,k)=c2d*c1d
      !                             !  = 31  F(i,j,k)=F(grid spacing and local velocity)
      !                             !  = 32  F(i,j,k)=F(local gridscale and deformation rate)
      !                        !  time invariant coefficients :  ahm = 1/2  Uv*Lv   (lap case)
      !                             !                            or  = 1/12 Uv*Lv^3 (blp case)
      rn_Uv      = 0.0250           !  lateral viscous velocity [m/s] (nn_ahm_ijk_t= 0, 10, 20, 30)
      rn_Lv      = 10.e+3           !  lateral viscous length   [m]   (nn_ahm_ijk_t= 0, 10)
      !                       !  Smagorinsky settings  (nn_ahm_ijk_t= 32) :
      rn_csmc       = 3.5         !  Smagorinsky constant of proportionality
      rn_minfac     = 1.0         !  multiplier of theorectical lower limit
      rn_maxfac     = 1.0         !  multiplier of theorectical upper limit
      !                       !  iso-neutral laplacian operator (ln_dynldf_iso=T) :
      rn_ahm_b      = 0.0         !  background eddy viscosity  [m2/s]
!----------------------------------------------------------------------------
!  drakkar comment : for the case  nn_aht_ijk_t = 20 ( only rn_Ud is used )
!                                                              LAP             BILAP
!           ahm[tf](:,:) = fac*Uv * max(e1,e2)(:,:) ^ n    [ fac=1/2, n=1 ; fac=1/12, n=3)
!  In 3.6   ahm[tf](:,:) = rn_ahm_0 * [ max(e1,e2)(:,:)/ max(e1,e2) ] ^ n
!     ===>  rn_Uv = rn_amt_0/fac/MAX(e1,e2)^n
!3.6 : rn_ahm_0_blp     =  -.077e10  !  horizontal bilaplacian eddy viscosity [m4/s] (BSAS12 ref 47.5 N)

!        rn_Uv = 0.077e10 * 12 /(7012)^3 = 0.02683   (bilap )
! comment ORCA05 : ahm_0_blp=-12e11  ==> rn_Uv = 12.e11*12/(55600)^3  =  0.0838 m/s
! comment ORCA025: ahm_0_blp=-1.1e11  ==> rn_Uv = 1.1e11*12/(27800)^3  =  0.06143835
! comment CREG025: ahm_0_blp=-3.0e11  ==> rn_Uv = 3.0e11*12/(27800)^3  =  0.1675591362736114
! comment CREG12 : ahm_0_blp=-1.0e10  ==> rn_Uv = 1.0e10*12/(8357)^3  =  0.20560 m/s
! comment ARC60  : ahm_0_blp=-3.25e06 ==> rn_Uv =3.25e06*12/(1160)^3  =  0.025 m/s  
!----------------------------------------------------------------------------
/

!!======================================================================
!!                     vertical physics namelists                     !!
!!                                                                    !!
!!    namzdf        vertical physics manager                            (default: NO selection)
!!    namzdf_ric    richardson number vertical mixing                   (ln_zdfric=T)
!!    namzdf_tke    TKE vertical mixing                                 (ln_zdftke=T)
!!    namzdf_gls    GLS vertical mixing                                 (ln_zdfgls=T)
!!    namzdf_osm    OSM vertical diffusion                              (ln_zdfosm=T)
!!    namzdf_iwm    tidal mixing parameterization                       (ln_zdfiwm=T)
!!======================================================================
!
!-----------------------------------------------------------------------
&namzdf        !   vertical physics manager                             (default: NO selection)
!-----------------------------------------------------------------------
   !                       ! adaptive-implicit vertical advection
   ln_zad_Aimp = .true.       !  Courant number dependent scheme (Shchepetkin 2015)
   !
   !                       ! type of vertical closure (required)
   ln_zdfcst   = .false.      !  constant mixing
   ln_zdfric   = .false.      !  local Richardson dependent formulation (T =>   fill namzdf_ric)
   ln_zdftke   = .true.       !  Turbulent Kinetic Energy closure       (T =>   fill namzdf_tke)
   ln_zdfgls   = .false.      !  Generic Length Scale closure           (T =>   fill namzdf_gls)
   ln_zdfosm   = .false.      !  OSMOSIS BL closure                     (T =>   fill namzdf_osm)
   !
   !                       ! convection
   ln_zdfevd   = .true.       !  enhanced vertical diffusion
      nn_evdm     =    1         ! apply on tracer (=0) or on tracer and momentum (=1)
      rn_evd      =   10.        ! mixing coefficient [m2/s]
   ln_zdfnpc   = .false.      !  Non-Penetrative Convective algorithm
      nn_npc      =    1         ! frequency of application of npc
      nn_npcp     =  365         ! npc control print frequency
   !
   ln_zdfddm   = .false.    ! double diffusive mixing
      rn_avts  =    1.e-4     !  maximum avs (vertical mixing on salinity)
      rn_hsbfr =    1.6       !  heat/salt buoyancy flux ratio
   !
   !                       ! gravity wave-driven vertical mixing
   ln_zdfiwm   = .true.       ! internal wave-induced mixing            (T =>   fill namzdf_iwm)
   ln_zdfswm   = .false.      ! surface  wave-induced mixing            (T => ln_wave=ln_sdw=T )
   !
   !                       ! coefficients
   rn_avm0     =   1.4e-6     !  vertical eddy viscosity   [m2/s]       (background Kz if ln_zdfcst=F)
   rn_avt0     =   1.0e-10    !  vertical eddy diffusivity [m2/s]       (background Kz if ln_zdfcst=F)
   nn_avb      =    0         !  profile for background avt & avm (=1) or not (=0)
   nn_havtb    =    0         !  horizontal shape for avtb (=1) or not (=0)
/
!-----------------------------------------------------------------------
&namzdf_ric    !   richardson number dependent vertical diffusion       (ln_zdfric =T)
!-----------------------------------------------------------------------
   rn_avmri    =  100.e-4  !  maximum value of the vertical viscosity
   rn_alp      =    5.     !  coefficient of the parameterization
   nn_ric      =    2      !  coefficient of the parameterization
   ln_mldw     =  .false.  !  enhanced mixing in the Ekman layer
      rn_ekmfc    =    0.7    !  Factor in the Ekman depth Equation
      rn_mldmin   =    1.0    !  minimum allowable mixed-layer depth estimate (m)
      rn_mldmax   = 1000.0    !  maximum allowable mixed-layer depth estimate (m)
      rn_wtmix    =   10.0    !  vertical eddy viscosity coeff [m2/s] in the mixed-layer
      rn_wvmix    =   10.0    !  vertical eddy diffusion coeff [m2/s] in the mixed-layer
/
!-----------------------------------------------------------------------
&namzdf_tke    !   turbulent eddy kinetic dependent vertical diffusion  (ln_zdftke =T)
!-----------------------------------------------------------------------
   rn_ediff    =   0.1     !  coef. for vertical eddy coef. (avt=rn_ediff*mxl*sqrt(e) )
   rn_ediss    =   0.7     !  coef. of the Kolmogoroff dissipation
   rn_ebb      =  67.83    !  coef. of the surface input of tke (=67.83 suggested when ln_mxl0=T)
   rn_emin     =   1.e-10  !  minimum value of tke [m2/s2]
   rn_emin0    =   1.e-4   !  surface minimum value of tke [m2/s2]
   rn_bshear   =   1.e-20  ! background shear (>0) currently a numerical threshold (do not change it)
   nn_pdl      =   1       !  Prandtl number function of richarson number (=1, avt=pdl(Ri)*avm) or not (=0, avt=avm)
   nn_mxl      =   3       !  mixing length: = 0 bounded by the distance to surface and bottom
   !                       !                 = 1 bounded by the local vertical scale factor
   !                       !                 = 2 first vertical derivative of mixing length bounded by 1
   !                       !                 = 3 as =2 with distinct dissipative an mixing length scale
   ln_mxl0     = .true.    !  surface mixing length scale = F(wind stress) (T) or not (F)
      nn_mxlice    = 3        ! type of scaling under sea-ice
                              !    = 0 no scaling under sea-ice
                              !    = 1 scaling with constant sea-ice thickness
                              !    = 2 scaling with mean sea-ice thickness ( only with SI3 sea-ice model )
                              !    = 3 scaling with maximum sea-ice thickness
      rn_mxlice   = 10.       ! max constant ice thickness value when scaling under sea-ice ( nn_mxlice=1)
   rn_mxl0     =   0.01    !  surface  buoyancy lenght scale minimum value
   ln_lc       = .true.    !  Langmuir cell parameterisation (Axell 2002)
      rn_lc       =   0.15    !  coef. associated to Langmuir cells
   nn_etau     =   1       !  penetration of tke below the mixed layer (ML) due to NIWs
                              !        = 0 none ; = 1 add a tke source below the ML
                              !        = 2 add a tke source just at the base of the ML
                              !        = 3 as = 1 applied on HF part of the stress           (ln_cpl=T)
      rn_efr      =   0.05    !  fraction of surface tke value which penetrates below the ML (nn_etau=1 or 2)
      nn_htau     =   1       !  type of exponential decrease of tke penetration below the ML
                              !        = 0  constant 10 m length scale
                              !        = 1  0.5m at the equator to 30m poleward of 40 degrees
   nn_eice     =   1       !  attenutaion of langmuir & surface wave breaking under ice
   !                       !           = 0 no impact of ice cover on langmuir & surface wave breaking
   !                       !           = 1 weigthed by 1-TANH(10*fr_i)
   !                       !           = 2 weighted by 1-fr_i
   !                       !           = 3 weighted by 1-MIN(1,4*fr_i)   
/
!-----------------------------------------------------------------------
&namzdf_iwm    !    internal wave-driven mixing parameterization        (ln_zdfiwm =T)
!-----------------------------------------------------------------------
   ln_mevar    = .false.   !  variable (T) or constant (F) mixing efficiency
   ln_tsdiff   = .true.    !  account for differential T/S mixing (T) or not (F)
/

!!======================================================================
!!                  ***  Diagnostics namelists  ***                   !!
!!                                                                    !!
!!   namtrd       dynamics and/or tracer trends                         (default: OFF)
!!   namptr       Poleward Transport Diagnostics                        (default: OFF)
!!   namhsb       Heat and salt budgets                                 (default: OFF)
!!   namdiu       Cool skin and warm layer models                       (default: OFF)
!!   namdiu       Cool skin and warm layer models                       (default: OFF)
!!   namflo       float parameters                                      (default: OFF)
!!   nam_diaharm  Harmonic analysis of tidal constituents               (default: OFF)
!!   nam_diadct   transports through some sections                      (default: OFF)
!!   nam_dia25h   25h Mean Output                                       (default: OFF)
!!   namnc4       netcdf4 chunking and compression settings             ("key_netcdf4")
!!======================================================================
!
!-----------------------------------------------------------------------
&namtrd        !   trend diagnostics                                    (default: OFF)
!-----------------------------------------------------------------------
   ln_glo_trd  = .false.   ! (T) global domain averaged diag for T, T^2, KE, and PE
   ln_dyn_trd  = .false.   ! (T) 3D momentum trend output
   ln_dyn_mxl  = .false.   ! (T) 2D momentum trends averaged over the mixed layer (not coded yet)
   ln_vor_trd  = .false.   ! (T) 2D barotropic vorticity trends (not coded yet)
   ln_KE_trd   = .false.   ! (T) 3D Kinetic   Energy     trends
   ln_PE_trd   = .false.   ! (T) 3D Potential Energy     trends
   ln_tra_trd  = .false.   ! (T) 3D tracer trend output
   ln_tra_mxl  = .false.   ! (T) 2D tracer trends averaged over the mixed layer (not coded yet)
   nn_trd      = 365       !  print frequency (ln_glo_trd=T) (unit=time step)
/
!!gm   nn_ctls     =   0       !  control surface type in mixed-layer trends (0,1 or n<jpk)
!!gm   rn_ucf      =   1.      !  unit conversion factor (=1 -> /seconds ; =86400. -> /day)
!!gm   cn_trdrst_in      = "restart_mld"   ! suffix of ocean restart name (input)
!!gm   cn_trdrst_out     = "restart_mld"   ! suffix of ocean restart name (output)
!!gm   ln_trdmld_restart = .false.         !  restart for ML diagnostics
!!gm   ln_trdmld_instant = .false.         !  flag to diagnose trends of instantantaneous or mean ML T/S
!!gm
!-----------------------------------------------------------------------
&namptr        !   Poleward Transport Diagnostic                        (default: OFF)
!-----------------------------------------------------------------------
   ln_diaptr   = .false.   !  Poleward heat and salt transport (T) or not (F)
   ln_subbas   = .false.   !  Atlantic/Pacific/Indian basins computation (T) or not
/
!-----------------------------------------------------------------------
&namhsb        !  Heat and salt budgets                                 (default: OFF)
!-----------------------------------------------------------------------
   ln_diahsb   = .false.   !  output the heat and salt budgets (T) or not (F)
/
!-----------------------------------------------------------------------
&namdiu        !   Cool skin and warm layer models                      (default: OFF)
!-----------------------------------------------------------------------
   ln_diurnal      = .false.   !
   ln_diurnal_only = .false.   !
/
!-----------------------------------------------------------------------
&namflo        !   float parameters                                     ("key_float")
!-----------------------------------------------------------------------
   jpnfl       = 1         !  total number of floats during the run
   jpnnewflo   = 0         !  number of floats for the restart
   ln_rstflo   = .false.   !  float restart (T) or not (F)
   nn_writefl  =      75   !  frequency of writing in float output file
   nn_stockfl  =    5475   !  frequency of creation of the float restart file
   ln_argo     = .false.   !  Argo type floats (stay at the surface each 10 days)
   ln_flork4   = .false.   !  trajectories computed with a 4th order Runge-Kutta (T)
   !                       !  or computed with Blanke' scheme (F)
   ln_ariane   = .true.    !  Input with Ariane tool convention(T)
   ln_flo_ascii = .true.    !  Output with Ariane tool netcdf convention(F) or ascii file (T)
/
!-----------------------------------------------------------------------
&nam_diaharm   !   Harmonic analysis of tidal constituents              ("key_diaharm")
!-----------------------------------------------------------------------
    nit000_han = 1         ! First time step used for harmonic analysis
    nitend_han = 75        ! Last time step used for harmonic analysis
    nstep_han  = 15        ! Time step frequency for harmonic analysis
    tname(1)   = 'M2'      ! Name of tidal constituents
    tname(2)   = 'K1'
/
!-----------------------------------------------------------------------
&namdct        ! transports through some sections                       ("key_diadct")
!-----------------------------------------------------------------------
    nn_dct     = 15        !  time step frequency for transports computing
    nn_dctwri  = 15        !  time step frequency for transports writing
    nn_secdebug = 112       !      0 : no section to debug
    !                      !     -1 : debug all section
    !                      !  0 < n : debug section number n
/
!-----------------------------------------------------------------------
&nam_diatmb    !  Top Middle Bottom Output                              (default: OFF)
!-----------------------------------------------------------------------
   ln_diatmb   = .false.   !  Choose Top Middle and Bottom output or not
/
!-----------------------------------------------------------------------
&nam_dia25h    !  25h Mean Output                                       (default: OFF)
!-----------------------------------------------------------------------
   ln_dia25h   = .false.   ! Choose 25h mean output or not
/
!-----------------------------------------------------------------------
&namnc4        !   netcdf4 chunking and compression settings            ("key_netcdf4")
!-----------------------------------------------------------------------
   nn_nchunks_i =   1       !  number of chunks in i-dimension
   nn_nchunks_j =   1       !  number of chunks in j-dimension
   nn_nchunks_k =   150     !  number of chunks in k-dimension
   !                       !  setting nn_nchunks_k = jpk will give a chunk size of 1 in the vertical which
   !                       !  is optimal for postprocessing which works exclusively with horizontal slabs
   ln_nc4zip   = .true.    !  (T) use netcdf4 chunking and compression
   !                       !  (F) ignore chunking information and produce netcdf3-compatible files
/

!!======================================================================
!!               ***  Observation & Assimilation  ***                 !!
!!                                                                    !!
!!   namobs       observation and model comparison                      (default: OFF)
!!   nam_asminc   assimilation increments                               ('key_asminc')
!!======================================================================
!
!!======================================================================
!!                  ***  Miscellaneous namelists  ***                 !!
!!                                                                    !!
!!   nammpp            Massively Parallel Processing                    ("key_mpp_mpi")
!!   namctl            Control prints                                   (default: OFF)
!!   namsto            Stochastic parametrization of EOS                (default: OFF)
!!======================================================================
!
!-----------------------------------------------------------------------
&nammpp        !   Massively Parallel Processing                        ("key_mpp_mpi")
!-----------------------------------------------------------------------
   ln_listonly =  .false.  !  do nothing else than listing the best domain decompositions (with land domains suppression)
   !                       !  if T: the largest number of cores tested is defined by max(mppsize, jpni*jpnj)
   ln_nnogather =  .false. !  activate code to avoid mpi_allgather use at the northfold
   jpni        =   <JPNI>  !  jpni   number of processors following i (set automatically if < 1)
   jpnj        =   <JPNJ>  !  jpnj   number of processors following j (set automatically if < 1)
/
!-----------------------------------------------------------------------
&namctl        !   Control prints                                       (default: OFF)
!-----------------------------------------------------------------------
   ln_ctl = .FALSE.                 ! Toggle all report printing on/off (T/F); Ignored if sn_cfctl%l_config is T
     sn_cfctl%l_config = .TRUE.     ! IF .true. then control which reports are written with the following
       sn_cfctl%l_runstat = .FALSE. ! switches and which areas produce reports with the proc integer settings.
       sn_cfctl%l_trcstat = .FALSE. ! The default settings for the proc integers should ensure
       sn_cfctl%l_oceout  = .TRUE. ! that  all areas report.
       sn_cfctl%l_layout  = .FALSE. !
       sn_cfctl%l_mppout  = .FALSE. !
       sn_cfctl%l_mpptop  = .FALSE. !
       sn_cfctl%procmin   = 0       ! Minimum area number for reporting [default:0]
       sn_cfctl%procmax   = 1000000 ! Maximum area number for reporting [default:1000000]
       sn_cfctl%procincr  = 1       ! Increment for optional subsetting of areas [default:1]
       sn_cfctl%ptimincr  = 1       ! Timestep increment for writing time step progress info
   nn_print    =    0      !  level of print (0 no extra print)
   nn_ictls    =    0      !  start i indice of control sum (use to compare mono versus
   nn_ictle    =    0      !  end   i indice of control sum        multi processor runs
   nn_jctls    =    0      !  start j indice of control               over a subdomain)
   nn_jctle    =    0      !  end   j indice of control
   nn_isplt    =    1      !  number of processors in i-direction
   nn_jsplt    =    1      !  number of processors in j-direction
   ln_timing   = .false.   !  timing by routine write out in timing.output file
   ln_diacfl   = .false.   !  CFL diagnostics write out in cfl_diagnostics.ascii
/
